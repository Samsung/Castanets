// Copyright 2020 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

module tab_search.mojom;

// Collection of WindowTabs of a profile.
struct ProfileTabs {
  array<WindowTabs> windows;
};

// Collection of Tab of a window.
struct WindowTabs {
  bool active;
  array<Tab> tabs;
};

// Information about an existing open tab.
struct Tab {
  bool active;
  int32 index;
  int32 tab_id;
  string? group_id;
  bool pinned;
  string title;
  string url;
  string? fav_icon_url;
  bool is_default_favicon;
  bool show_icon;
};

// Collection of tab groups.
struct TabGroups {
  map<string, TabGroup> groups;
};

// Information about a tab group.
struct TabGroup {
  string color;
  string text_color;
  string title;
};

// Information about switching to a tab.
struct SwitchToTabInfo {
  int32 tab_id;
};

// Used by the WebUI page to bootstrap bidirectional communication.
interface PageHandlerFactory {
  // The WebUI calls this method when the page is first initialized.
  CreatePageHandler(pending_remote<Page> page,
                    pending_receiver<PageHandler> handler);
};

// Browser-side handler for requests from WebUI page.
interface PageHandler {
  // Get tabs grouped by windows for the current profile
  GetProfileTabs() => (ProfileTabs profile_tabs);

  // Get tab groups for the current profile.
  GetTabGroups() => (TabGroups tab_groups);

  // Switch to a specific tab.
  SwitchToTab(SwitchToTabInfo switch_to_tab_info);
};

// WebUI-side handler for requests from the browser.
interface Page {
};
