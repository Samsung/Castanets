apply plugin: 'com.android.application'

def getVersionCode = { ->
    try {
        def stdout = new ByteArrayOutputStream()
        exec {
            commandLine 'git', 'rev-list', '--first-parent', '--count', 'master'
            standardOutput = stdout
        }
        return Integer.parseInt(stdout.toString().trim())
    } catch (ignored) {
        return -1;
    }
}

def getVersionName = { ->
    try {
        def stdout = new ByteArrayOutputStream()
        exec {
            commandLine 'git', 'describe', '--tags'
            standardOutput = stdout
        }
        return stdout.toString().trim()
    } catch (ignored) {
        return "0.0.0";
    }
}

android {
    compileSdkVersion 29
    buildToolsVersion "29.0.3"

    defaultConfig {
        applicationId "com.samsung.offloadworker"
        minSdkVersion 21
        targetSdkVersion 29
        versionCode 1
        versionName getVersionName()

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

        // Generate apk file name as application id with version
        project.ext.set("archivesBaseName", applicationId + "-" + defaultConfig.versionName)
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'com.google.code.gson:gson:2.8.5'
    implementation 'com.android.support:appcompat-v7:+'
    implementation 'com.android.support:preference-v7:+'
    implementation 'com.android.support.constraint:constraint-layout:1.1.3'
    implementation 'org.jetbrains:annotations-java5:15.0'

    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
}

task copyAssets(type: Copy) {
    description = 'Copies files from offload-worker/src directory...'
    from '../../src/'
    into 'src/main/assets/'
}

preBuild.dependsOn copyAssets
