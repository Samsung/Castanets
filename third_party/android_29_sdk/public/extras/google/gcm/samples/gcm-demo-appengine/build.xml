<?xml version="1.0" encoding="UTF-8"?>
<!--
  - Copyright 2012 Google Inc.
  -
  - Licensed under the Apache License, Version 2.0 (the "License"); you may not
  - use this file except in compliance with the License. You may obtain a copy
  - of the License at
  -
  - http://www.apache.org/licenses/LICENSE-2.0
  -
  - Unless required by applicable law or agreed to in writing, software
  - distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
  - WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
  - License for the specific language governing permissions and limitations
  - under the License.
-->
<project name="gcm-demo-appengine" default="dist">

  <!-- Set the Google App Engine SDK location below or using -Dsdk.dir -->
  <!--
  <property name="sdk.dir" location="/opt/google/appengine-java-sdk" />
  -->
  <!-- Also set the property below to your server's host name or ip address -->
  <property name="server.host" value="localhost"/>
  <property name="server.port" value="8080"/>

  <import file="${sdk.dir}/config/user/ant-macros.xml" />

  <property name="src" location="src"/>
  <property name="lib" location="lib"/>
  <property name="build" location="build"/>
  <property name="dist" location="dist"/>
  <property name="war" value="${dist}/gcm-demo.war"/>
  <property name="web-src" value="WebContent"/>
  <property name="web-inf" value="${web-src}/WEB-INF"/>
  <property name="web-lib" value="${web-inf}/lib"/>
  <property name="classes" location="${web-inf}/classes"/>

  <path id="compile.classpath">
    <fileset dir="${lib}">
      <include name="*.jar"/>
    </fileset>
    <fileset dir="${web-lib}">
      <include name="*.jar"/>
    </fileset>
  </path>

  <target name="clean" description="Clean all artifacts except the dist files.">
    <delete dir="${build}"/>
    <delete dir="${classes}"/>
    <delete>
      <fileset dir="${web-lib}" excludes="gcm-server.jar,json_simple*.jar"/>
    </delete>
  </target>

  <target name="full-clean" depends="clean" description="Clean all artifacts including the dist files.">
    <delete dir="${dist}"/>
  </target>

  <target name="init">
    <mkdir dir="${classes}"/>
    <mkdir dir="${dist}"/>
  </target>

  <target name="copyjars" depends="init" description="Copies the App Engine JARs to the WAR." if="sdk.dir">
    <copy todir="${web-lib}" flatten="true">
      <fileset dir="${sdk.dir}/lib/user">
        <include name="**/*.jar" />
      </fileset>
    </copy>
  </target>

  <target name="compile" depends="copyjars" description="Compile the Java classes.">
    <javac destdir="${classes}" debug="true" srcdir="${src}" target="1.5"
      includeantruntime="false">
      <classpath refid="compile.classpath"/>
    </javac>
  </target>

  <target name="datanucleusenhance" depends="compile" description="Performs JDO enhancement on compiled data classes.">
    <enhance_war war="${web-src}" />
  </target>


  <target name="war" depends="datanucleusenhance" description="Generate the WAR file.">
    <war destfile="${war}" webxml="${web-src}/WEB-INF/web.xml">
      <fileset dir="${web-src}"/>
      <classes dir="${classes}"/>
    </war>
  </target>

  <target name="dist" depends="war" description="Generate all artifacts."/>

  <target name="runserver" depends="datanucleusenhance" description="Starts the development server.">
    <dev_appserver war="${web-src}" port="${server.port}" address="${server.host}"/>
  </target>

  <!-- You can give the development server arguments using attributes and an <options> element.
       For example, the following target starts the server using the port 8888,
       and enables remote Java debugging on port 9999:
  -->
  <target name="debugserver" depends="datanucleusenhance" description="Starts the development server on debug mode.">
    <dev_appserver war="${web-src}" port="${server.port}" address="${server.host}">
      <options>
        <arg value="--jvm_flag=-Xdebug"/>
        <arg value="--jvm_flag=-Xrunjdwp:transport=dt_socket,server=y,suspend=y,address=9999"/>
      </options>
    </dev_appserver>
  </target>

</project>

