This is a testharness.js-based test.
PASS Missing arguments
PASS Branding
PASS Invalid arguments
PASS Promise type
PASS Empty module without imports argument: BufferSource argument
PASS Empty module without imports argument: Module argument
PASS Empty module with undefined imports argument: BufferSource argument
PASS Empty module with undefined imports argument: Module argument
PASS Empty module with empty imports argument: BufferSource argument
PASS Empty module with empty imports argument: Module argument
PASS getter order for imports object: BufferSource argument
PASS getter order for imports object: Module argument
PASS imports: BufferSource argument
PASS imports: Module argument
PASS No imports: BufferSource argument
PASS No imports: Module argument
PASS exports and imports: BufferSource argument
PASS exports and imports: Module argument
FAIL i64 exports and imports: BufferSource argument promise_test: Unhandled rejection with value: object "LinkError: WebAssembly.instantiate(): Import #0 module="module" function="global" error: global import cannot have type i64"
FAIL i64 exports and imports: Module argument promise_test: Unhandled rejection with value: object "LinkError: WebAssembly.instantiate(): Import #0 module="module" function="global" error: global import cannot have type i64"
PASS import with i32-returning function: BufferSource argument
PASS import with i32-returning function: Module argument
PASS import with function that takes and returns i32: BufferSource argument
PASS import with function that takes and returns i32: Module argument
FAIL import with i64-returning function: BufferSource argument assert_true: Should have called into JS expected true got false
FAIL import with i64-returning function: Module argument assert_true: Should have called into JS expected true got false
FAIL import with function that takes and returns i64: BufferSource argument promise_test: Unhandled rejection with value: object "TypeError: wasm function signature contains illegal type"
FAIL import with function that takes and returns i64: Module argument promise_test: Unhandled rejection with value: object "TypeError: wasm function signature contains illegal type"
PASS import with i32-taking function: BufferSource argument
PASS import with i32-taking function: Module argument
PASS import with i64-taking function: BufferSource argument
PASS import with i64-taking function: Module argument
FAIL export i64-returning function: BufferSource argument promise_test: Unhandled rejection with value: object "TypeError: wasm function signature contains illegal type"
FAIL export i64-returning function: Module argument promise_test: Unhandled rejection with value: object "TypeError: wasm function signature contains illegal type"
PASS i32 mutable WebAssembly.Global import: BufferSource argument
PASS i32 mutable WebAssembly.Global import: Module argument
FAIL i64 mutable WebAssembly.Global import: BufferSource argument WebAssembly.Global(): Can't set the value of i64 WebAssembly.Global
FAIL i64 mutable WebAssembly.Global import: Module argument WebAssembly.Global(): Can't set the value of i64 WebAssembly.Global
FAIL Multiple i64 arguments: BufferSource argument promise_test: Unhandled rejection with value: object "TypeError: wasm function signature contains illegal type"
FAIL Multiple i64 arguments: Module argument promise_test: Unhandled rejection with value: object "TypeError: wasm function signature contains illegal type"
PASS stray argument: BufferSource argument
PASS stray argument: Module argument
PASS Synchronous options handling: Buffer argument
PASS Synchronous options handling: Module argument
PASS Empty buffer
PASS Invalid code
PASS Changing the buffer
Harness: the test ran to completion.

