This is a testharness.js-based test.
PASS CountQueuingStrategy: Can construct a with a valid high water mark
FAIL CountQueuingStrategy: Constructor behaves as expected with strange arguments assert_throws_js: construction fails with null function "() => new QueuingStrategy(null)" did not throw
FAIL CountQueuingStrategy: highWaterMark constructor values are converted per the unrestricted double rules assert_equals: false gets set correctly expected (number) 0 but got (boolean) false
FAIL CountQueuingStrategy: size is the same function across all instances assert_equals: expected function "function () { [native code] }" but got function "function () { [native code] }"
FAIL CountQueuingStrategy: size should have the right name assert_equals: expected "size" but got ""
PASS CountQueuingStrategy: subclassing should work correctly
PASS ByteLengthQueuingStrategy: Can construct a with a valid high water mark
FAIL ByteLengthQueuingStrategy: Constructor behaves as expected with strange arguments assert_throws_js: construction fails with null function "() => new QueuingStrategy(null)" did not throw
FAIL ByteLengthQueuingStrategy: highWaterMark constructor values are converted per the unrestricted double rules assert_equals: false gets set correctly expected (number) 0 but got (boolean) false
FAIL ByteLengthQueuingStrategy: size is the same function across all instances assert_equals: expected function "function () { [native code] }" but got function "function () { [native code] }"
FAIL ByteLengthQueuingStrategy: size should have the right name assert_equals: expected "size" but got ""
PASS ByteLengthQueuingStrategy: subclassing should work correctly
PASS CountQueuingStrategy: size should have the right length
FAIL ByteLengthQueuingStrategy: size should have the right length assert_equals: expected 1 but got 0
PASS CountQueuingStrategy: size behaves as expected with strange arguments
PASS ByteLengthQueuingStrategy: size behaves as expected with strange arguments
Harness: the test ran to completion.

