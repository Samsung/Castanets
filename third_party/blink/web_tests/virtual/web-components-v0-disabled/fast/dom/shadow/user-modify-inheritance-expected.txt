Tests to ensure that a '-webkit-user-modify' CSS property is not inherited across shadow boundaries.

On success, you will see a series of "PASS" messages, followed by "TEST COMPLETE".

FAIL computedStyle(prepareNodeInShadowRoot(document.getElementById("contenteditable-host1"), null)) should be read-only. Threw exception TypeError: host.createShadowRoot is not a function
FAIL computedStyle(prepareNodeInShadowRoot(document.getElementById("contenteditable-host2"), "false")) should be read-only. Threw exception TypeError: host.createShadowRoot is not a function
FAIL computedStyle(prepareNodeInShadowRoot(document.getElementById("contenteditable-host3"), "true")) should be read-write. Threw exception TypeError: host.createShadowRoot is not a function
FAIL computedStyle(prepareNodeInShadowRoot(document.getElementById("non-contenteditable-host1"), null)) should be read-only. Threw exception TypeError: host.createShadowRoot is not a function
FAIL computedStyle(prepareNodeInShadowRoot(document.getElementById("non-contenteditable-host2"), "false")) should be read-only. Threw exception TypeError: host.createShadowRoot is not a function
FAIL computedStyle(prepareNodeInShadowRoot(document.getElementById("non-contenteditable-host3"), "true")) should be read-write. Threw exception TypeError: host.createShadowRoot is not a function
FAIL getUserModifyProperty("child-a") should be read-write. Was read-only.
FAIL getUserModifyProperty("child-b") should be read-write. Was read-only.
PASS getUserModifyProperty("child-c") is "read-only"
PASS getUserModifyProperty("child-d") is "read-only"
PASS successfullyParsed is true

TEST COMPLETE


